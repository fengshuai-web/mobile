{"remainingRequest":"C:\\Users\\web\\Desktop\\冯帅\\si\\day01ex\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\web\\Desktop\\冯帅\\si\\day01ex\\vue_app_000\\vue_app_00\\src\\components\\xz\\Cart.vue?vue&type=style&index=0&lang=css","dependencies":[{"path":"C:\\Users\\web\\Desktop\\冯帅\\si\\day01ex\\vue_app_000\\vue_app_00\\src\\components\\xz\\Cart.vue","mtime":1570608907944},{"path":"C:\\Users\\web\\Desktop\\冯帅\\si\\day01ex\\vue_app_000\\vue_app_00\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\web\\Desktop\\冯帅\\si\\day01ex\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1521907988000},{"path":"C:\\Users\\web\\Desktop\\冯帅\\si\\day01ex\\vue_app_000\\vue_app_00\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\web\\Desktop\\冯帅\\si\\day01ex\\vue_app_000\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\web\\Desktop\\冯帅\\si\\day01ex\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n/* 1:购物车的商品内容 */\r\n    .cart-item{\r\n        display: flex;/*弹性布局 连段对齐*/\r\n        justify-content: space-between;\r\n        align-items: center;/*垂直居中*/\r\n        border-bottom:1px solid #ccc;\r\n        margin-top:25px;    /*顶部距离*/\r\n    }\r\n/*2.左侧复选框和文字设为弹性布局*/\r\n    .leftText{\r\n        display: flex;\r\n        align-items: center;/*垂直居中*/\r\n    }\r\n/*3.修饰商品名称*/\r\n    .lname{\r\n        margin-left:25px;\r\n        color:#333;\r\n    }\r\n/*4.修饰商品价格*/\r\n    .price{\r\n        margin-left:25px;\r\n        color:red;        \r\n    }\r\n",{"version":3,"sources":["Cart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Cart.vue","sourceRoot":"src\\components\\xz","sourcesContent":["<template>\r\n    <div>\r\n        <!-- <h1>购物车</h1> -->\r\n        <!-- (1)顶部复选框:全选 -->\r\n        <div>\r\n            全选 <input type=\"checkbox\" @change=\"selectAll\" v-model=\"allcb\"/>\r\n        </div>\r\n        <!-- (2)中间复选框:商品/价格/删除 -->\r\n        <div class=\"cart-item\" v-for=\"(item,i) of list\" :key=\"i\">\r\n            <div class=\"leftText\">\r\n                <input type=\"checkbox\" v-model=\"item.cb\" @change=\"itemchange\" />\r\n                <div class=\"lname\">{{item.lname}}</div>\r\n                <div class=\"price\">¥{{item.price}}</div>\r\n            </div>\r\n                <mt-button :data-id=\"item.id\" @click=\"del\">删除</mt-button>\r\n        </div>\r\n        <!-- (3)删除选中商品复选框 -->\r\n        <div>购物车中商品的数量\r\n            <span style=\"color:red\">\r\n                {{$store.getters.getCart}}\r\n            </span>\r\n            <mt-button @click=\"delm\">删除选中的商品</mt-button>\r\n        </div>\r\n    </div>\r\n    \r\n</template>\r\n<script>\r\nexport default {\r\n    data(){\r\n        return {\r\n            list:[],//购物车列表\r\n            allcb:false//全选按钮状态！\r\n        }\r\n    },\r\n    created() {//1:添加声明周期\r\n        this.loadMore();\r\n    },\r\n    methods:{\r\n        itemchange(){\r\n            //功能:商品复选框状态需改\r\n            // 1:累加商品状态\r\n            // 2:创建变量\r\n            var sum=0;\r\n            // 3:创建循环遍历商品状态\r\n            for(var item of this.list){\r\n                if(item.cb){\r\n                    sum++;\r\n                }\r\n            }\r\n            // console.log(sum);\r\n            // console.log(this.list.length)\r\n            // 4:如果是true则变量数据+1\r\n            // 5:如果选中的数量与数组相同,\r\n            //将全选allcb=true\r\n            if(sum==this.list.length){\r\n                this.allcb=true;\r\n            }else{\r\n                this.allcb=false;\r\n            }\r\n\r\n        },\r\n          delm(){\r\n                //1:显示交互提示框，请用户再次确认是否删除指定商品\r\n                this.$messagebox.confirm(\"是否删除指定商品\").then(res=>{\r\n                    //回调函数\r\n                //2:选择确认\r\n                //3:创建空字符串\r\n                var str=\"\";\r\n                //4:创建循环遍历list数组,判断如果当前对象cb值为true将对象id拼接\r\n                for(var item of this.list){\r\n                    if(item.cb){\r\n                     str+=item.id+\",\"\r\n                 }\r\n           }    \r\n                //5:判断用户是否选中商品提示请选择要删除的商品\r\n                if(str.length==0){\r\n                    this.$messagebox(\"请选择要删除的商品\");\r\n                    return;\r\n                }\r\n                //0         起始下标\r\n                //str.length-1保存几个字符串\r\n                str = str.substring(0,str.length-1);\r\n                console.log(str);\r\n                //6:创建url创建obj\r\n                var url = \"delm\";\r\n                var obj = {id:str};\r\n                //7:发送ajax请求\r\n                this.axios.get(url,{params:obj}).then(res=>{\r\n                    //console.log(res);\r\n                     //8:更新加载购物车列表\r\n                    this.loadMore();\r\n                      //9:提示删除成功 \r\n                    this.$toast(\"删除成功\");  \r\n             })\r\n             }).catch(err=>{\r\n                    //取消\r\n             }) \r\n        },\r\n        selectAll(event){\r\n          //1:添加参数event\r\n          //2:获取当前全选按钮状态\r\n          var all=event.target.checked;\r\n          //3:复制所有商品cb\r\n          for(var item of this.list){\r\n              item.cb=all;\r\n          }  \r\n        },\r\n        del(event){\r\n            // 1:为删除按钮添加自定义属性\r\n            // data-id保存当前购物车商品id\r\n            // 2:添加点击事件click del\r\n            // 2.1:交互提示 是否删除\r\n            this.$messagebox.confirm(\"是否删除指定商品\").then(res=>{\r\n                //回调函数\r\n            // 3:获取当前商品id\r\n            var id=event.target.dataset.id;\r\n            // 4:输出id\r\n            console.log(id)\r\n            // 5:发送ajax请求\r\n            var url=\"del\";\r\n            var obj={id};\r\n            this.axios.get(url,{params:obj}).then(res=>{\r\n                console.log(res)\r\n                // 6:获取服务器端返回数据\r\n            if(res.data.code > 0){\r\n                this.$toast(\"删除成功\")\r\n                this.loadMore();\r\n            }\r\n            })\r\n            \r\n            // 7:提示删除成功\r\n            // 8:重新调用loadMore\r\n            }).catch(err=>{\r\n                //取消\r\n            })\r\n        },\r\n        loadMore(){\r\n            // 1:创建url\r\n            var url=\"findCart\"\r\n            // 2:发送ajax请求来获取购物车\r\n            this.axios.get(url).then(res=>{\r\n                // console.log(res.data.code)\r\n                if(res.data.code==-1){\r\n                    //提示交互提示框\r\n                    this.$messagebox(\"消息\",\"请登录\").then(res=>{\r\n                        //跳转登录组件\r\n                        this.$router.push(\"/login\")\r\n                    })\r\n                }else{\r\n                    //(1)为每个商品添加状态\r\n                    //res变量 data属性 data数组\r\n                    var list=res.data.data;\r\n                    for(var item of list){\r\n                        item.cb=false;\r\n                    }\r\n                    //(2)赋值\r\n                    this.list=list;\r\n                    //(2.9)加载之前先清空\r\n                    this.$store.commit(\"clearCart\");\r\n                    //(3)创建循环遍历数组\r\n                    for(var item of this.list){\r\n                        //(4)在循环中修改购物车的数量\r\n                        this.$store.commit(\"addCart\");\r\n                    }\r\n                }\r\n            })\r\n            // 3:将服务器返回的数据保存到list\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n/* 1:购物车的商品内容 */\r\n    .cart-item{\r\n        display: flex;/*弹性布局 连段对齐*/\r\n        justify-content: space-between;\r\n        align-items: center;/*垂直居中*/\r\n        border-bottom:1px solid #ccc;\r\n        margin-top:25px;    /*顶部距离*/\r\n    }\r\n/*2.左侧复选框和文字设为弹性布局*/\r\n    .leftText{\r\n        display: flex;\r\n        align-items: center;/*垂直居中*/\r\n    }\r\n/*3.修饰商品名称*/\r\n    .lname{\r\n        margin-left:25px;\r\n        color:#333;\r\n    }\r\n/*4.修饰商品价格*/\r\n    .price{\r\n        margin-left:25px;\r\n        color:red;        \r\n    }\r\n</style>\r\n"]}]}